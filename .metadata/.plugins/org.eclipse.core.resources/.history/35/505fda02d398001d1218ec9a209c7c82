# PACKAGES -- required by main programme
require(RODBC)
require(maps) 
require(fields)

# PACKAGES -- required by functions
require(raster)
require(gdistance)

# MAIN PROGRAMME

# Load the coordinates, plot them on a world map, get cell numbers for the coordinates
connect = odbcConnectExcel("e:\\documents2\\GermplasmData\\DoebleyLab\\Plant_Samples_fin.xls");
query = "SELECT UniqueID, x, y FROM [test$] WHERE (((UniqueID) Is Not Null));"
geodataraw = sqlQuery(connect, query);
odbcClose(connect);
geodata <- subset(geodataraw, geodataraw[,1] %in% c(32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,230,231,232,233,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264))

# Plot the data on a map
plot(geodata[,2],geodata[,3])
world(ylim = c(-90, 90), xlim = NULL, add = TRUE, asp = 1, xlab = "", ylab = "", xaxt = "n", yaxt = "n", eps =	0.1, col=1,shift = FALSE, col.water="lightblue", col.land="lightgreen",	fill=T)
points(geodata[,2],geodata[,3], pch=20)

# Get grids and make transition matrices
temperature <- raster.create.from.file('E:/documents2/Grid_data/WorldClim/annualmeantemperature.grd')
temperature <- raster.read.all(temperature)
precipitation <- raster.create.from.file('E:/documents2/Grid_data/WorldClim/annualprecipitation.grd')
precipitation <- raster.read.all(precipitation)
precipitation@data <- log1p(precipitation@data)
climate.rasterstack <- rasterstack.create.from.rasters(c(temperature,precipitation))
climate.tm <- transition.create.from.rasterstack.mahal(climate.rasterstack,outer.meridian.connect=TRUE)

aez15 <- raster.create.from.file('E:/documents2/Grid_data/AEZ/plate15/plate15.bil')
aez15 <- raster.read.all(aez15)
aez15 <- raster.change.cut(aez15,-180,180,-60,90)
aez15@data[aez15@data==65527] <- 0
aez15@data[aez15@data>0] <- 1

aez39 <- raster.create.from.file('E:/documents2/Grid_data/AEZ/plate39/plate39.bil')
aez39@xres <- 1/12
aez39@yres <- 1/12
aez39@xmax <- 180
aez39@ymax <- 90
aez39 <- raster.read.all(aez39)
aez39@data[aez39@data==8 | aez39@data==9] <- 0
aez39@data[aez39@data>0] <- 1
aez39 <- raster.change.cut(aez39,-180,180,-60,90)
aez39 <- raster.change.aggregate(aez39,factor=6)

aez30 <- raster.create.from.file('E:/documents2/Grid_data/AEZ/plate30/plate30.bil')
aez30@xres <- 1/12
aez30@yres <- 1/12
aez30@xmax <- 180
aez30@ymax <- 90
aez30 <- raster.read.all(aez30)
aez30@data[aez30@data==8 | aez30@data==9] <- 0
aez30@data[aez30@data>0] <- 1
aez30 <- raster.change.cut(aez30,-180,180,-60,90)
aez30 <- raster.change.aggregate(aez30,factor=6)

aez <- raster.create.new(xmin = -180, xmax = 180, ymin = -60, ymax = 90, nrows = 300, ncols = 720, projection = "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
aez@data <- aez15@data + aez39@data + aez30@data
aez.tm <- transition.create.from.raster(aez,transition.function=min,outer.meridian.connect=TRUE)

popdensity <- raster.create.from.file('E:/documents2/Grid_data/HYDE30/1500ad_lu/popd_1500AD.asc')
popdensity@xres <- 1/12
popdensity@yres <- 1/12
popdensity@xmax <- 180
popdensity@ymax <- 90
popdensity <- raster.read.all(popdensity)
log.popdensity <- popdensity
log.popdensity@data <- log1p(popdensity@data)
log.popdensity <- raster.change.cut(log.popdensity,-180,180,-60,90)
log.popdensity <- raster.change.aggregate(log.popdensity,factor=6)
log.popdensity.tm <- transition.create.from.raster(log.popdensity,transition.function=min,outer.meridian.connect=TRUE)

ts <- transitionstack.create(climate.tm, aez.tm, log.popdensity.tm)
tm <- transitionstack.calc(ts,prod)
tm@x[tm@x<0.000001] <- 0

# Make a buffer around the suited area and discard other continents
adjacency.total <- adjacency.from.transition(tm,outer.meridian.connect=TRUE) #raster as argument could be omitted by defining transition.matrix and adjacency object-classes.
buffer <- adjacency.buffer.from.adjacency(temperature,adjacency.total,3,outer.meridian.connect=TRUE)
tm[buffer] <- mean(tm@x)-sd(tm@x)
tm <- transition.solidify(tm)
tm <- transition.connected.component(tm,temperature,geodata)

#Calculate geographic variables
resistance.distance <- distance.resistance.xy(tm, geodata)

hitting.time <- raster.hitting.time.single.origin(tm,c(-100,18))
time.depth <- max(hitting.time)-hitting.time

time.depth.difference <- distance.from.level(time.depth[as.character(raster.get.cell.from.xy(g,geodata[,2:3]))],mean)

hitting.time.centrality <- level.hitting.time.centrality.all.origins.xy(tm,time.depth,geodata)
hitting.time.centrality.diff.unw <- distance.from.level(hitting.time.centrality$unw,function(x){abs(x[1]-x[2])})
hitting.time.centrality.diff.w <- distance.from.level(hitting.time.centrality$w,function(x){abs(x[1]-x[2])})

hitting.time.centrality.overlap <- distance.joint.hitting.time.all.origins.xy(tm, geodata, time.depth)
hitting.time.centrality.overlap.unw <- as.dist(hitting.time.centrality.overlap$unw)
hitting.time.centrality.overlap.w <- as.dist(hitting.time.centrality.overlap$w)

joint.trajectory <- distance.joint.trajectory.single.origin.xy(tm, geodata, c(-100,18), time.depth)
joint.trajectory.unw <- as.dist(joint.trajectory$w)
joint.trajectory.w <- as.dist(joint.trajectory$unw)
